name: Java Spring Boot + AWS Fargate.
run-name: ${{ github.actor }}

on:
  push:
    branches:
      - "main"

env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-infrastructure:
    name: Terraform CI/CD
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate
        working-directory: ./terraform

      - name: Terraform Apply
        id: apply
        run: terraform apply --auto-approve
        working-directory: ./terraform

  build-and-deploy:
    name: Build and Deploy Docker Image to ECR
    runs-on: ubuntu-latest
    needs: build-infrastructure
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region ${{ env.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com

      - name: Build Docker Image
        id: build-image
        run: |
          ./gradlew jibDockerBuild

      - name: Tag Docker Image
        id: tag-image
        run: |
          docker tag spring-boot-aws-fargate:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/spring-boot-aws-fargate:latest

      - name: Push Docker Image to ECR
        id: push-image
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}}.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com/spring-boot-aws-fargate:latest
