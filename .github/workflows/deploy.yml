name: Java Spring Boot + AWS Fargate.
run-name: ${{ github.actor }}

on:
  push:
    branches:
      - "main"

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

jobs:
  build-and-deploy:
    name: Build and Deploy Docker Image to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Docker Compose
        run: |
          docker compose up -d
          docker image ls
          docker container ls

      - name: Install Java 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Configure AWS Credentials
        id: configure-aws
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID --profile default
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY --profile default
          aws configure set region $AWS_DEFAULT_REGION --profile default
          aws configure set output json --profile default

      - name: Login to ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - name: Gradle Clean Build
        id: gradle-clean-build
        run: |
          ./gradlew clean build

      - name: Docker Build Image
        id: docker-build-image
        run: |
          docker build -t notes-api .

      - name: Docker Tag Image
        id: docker-tag-image
        run: |
          docker tag notes-api:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/notes-api:latest

      - name: Docker Push Image to ECR
        id: docker-push-image-to-ecr
        run: |
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/notes-api:latest
